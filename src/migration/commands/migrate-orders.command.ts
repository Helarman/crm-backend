// commands/migrate-orders.command.ts
import { Command, CommandRunner } from 'nest-commander';
import { MigrationService } from 'src/migration/migration.service';

@Command({ 
  name: 'migrate-orders', 
  description: '–ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ—Ä—è–¥–∫–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤' 
})
export class MigrateOrdersCommand extends CommandRunner {
  constructor(private readonly migrationService: MigrationService) {
    super();
  }

  async run(): Promise<void> {
    console.log('üöÄ Starting order migration...');
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
      const status = await this.migrationService.checkOrderStatus();
      console.log('üìä Current status:', JSON.stringify(status, null, 2));

      // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—és
      const result = await this.migrationService.migrateAllOrders();
      console.log('‚úÖ Migration completed:', JSON.stringify(result, null, 2));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const finalStatus = await this.migrationService.checkOrderStatus();
      console.log('üìä Final status:', JSON.stringify(finalStatus, null, 2));

    } catch (error) {
      console.error('‚ùå Migration failed:', error);
      process.exit(1);
    }
  }
}